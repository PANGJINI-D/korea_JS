day54 (웹개발4 1일차)
개인프로젝트 확인 및 일정 --> 자바스크립트 --> js환경구축 --> 자바스크립트 기본 문법

-------------------------------------------------------------------------------------------------------------------

[ 일정 ]

	- 쉬는날 : 15일(목), 16일(금), 23일(금)
	- 종강    : 9/5(목)
	

	- 수업내용 : JS, Vue.js
	  8/20 쯤 자바스크립트 끝남.. 일정 맞춰서 공부


-------------------------------------------------------------------------------------------------------------------

[ 복습 ]
	HTML		웹의 구조(정적) / 내용 작성
	CSS		웹 디자인 요소(레이아웃, 색상, 정렬, 이벤트 설정)
	Javascript		웹의 동작 구현


-------------------------------------------------------------------------------------------------------------------

[ 자바스크립트 Javascript ]
💜JS
	- 객체 기반의 스크립트 언어
	- compile 과정 없음, JS 인터프리터에 의해 바로 실행된다.
	※ 개발이 발전됨에 따라 컴파일이 가능해졌으며, Node.js로 서버 환경을 구축한다.

	JS		인터프리터		CPU
	- 웹 브라우저에는 JS 소스를 읽고 처리하는 해석기가 있다.
	- JS 코드는 html 문서 내에서 <script>태그를 이용해 작성할 수 있다.
	- JS 소스코드만 별도 스크립트 파일로 작성 후 html 문서와 연결하여 사용한다. ( 파일명.js )	


💜JS의 역사
	- 1995년, 넷스케이프사, 개발자: 브렌던아이크
	- 이름 변화: 모카 -> 라이브스크립트 -> 자바스크립트

	- 초기 JS는 웹페이지의 보조적인 기능을 수행하기 위해 한정적인 용도로 사용했다.
	  대부분의 로직은 주로 웹 서버에서 실행되고 브라우저는 전달받은 HTML과 CSS를 단순히 렌더링하는 수준으로 사용했다.
	** 렌더링
		html, css, js로 작성된 문서를 해석하여 브라우저에 시각적으로 출력하는 것
		서버에서 데이터를 html로 변환하여 브라우저에게 전달하는 과정(SSR: Server Side Rendering)을 의미하기도 함


💜JS 특징
	- 퍼즐처럼 코드 형태로 html 페이지에 내장된다.
	- 컴파일 과정이 없이 브라우저 내부의 인터프리터에 의해 바로 실행된다.

	[ index.html ]		-->		[ 브라우저 ]
	<script>		          인터프리터		결과출력
		JS코드...
	</script>


💜JAVA / JS 차이
	- 직접적인 관련이 없지만, 문법상 비슷한 부분이 있다. (C언어 기반으로 만들어졌기 때문)
	
	[ JAVA ]				[ JS ]
	compile 언어			interpreter 언어
	변수 자료형 검사 엄격		자료형 명시 안함 (동적 바인딩, 값이 들어갈 때 자료형 결정)
	class 기반 객체지향언어		prototype 기반 객체지향언어


💜웹페이지에서 JS의 역할
	- 웹페이지는 html, css, js 코드가 결합되어 작성된다.
	- JS는 사용자의 입력을 처리하거나 웹 어플리케이션을 작성하는 등 동적 제어에 사용된다.

1. 사용자의 입력 및 계산
	- html의 form은 입력창만 제공한다.
	- key, mouse 입력과 계산은 JS로만 처리할 수 있다.

2. 웹페이지의 내용 및 모양의 동적 제어
	- html 태그의 속성이나 컨텐츠, css 속성값을 변경하여 웹페이지에 동적인 변화를 주는 데 활용된다.

3. 브라우저 제어
	- 브라우저 윈도우의 크기나 모양 변경, 새 윈도우 탭 열기, 다른 웹 사이트 접속 등
	  브라우저의 작동을 제어하는 데 활용된다.

4. 웹 서버와의 통신(Ajax)
	- 웹 페이지가 웹 서버와 데이터를 주고받는 데 사용된다.
	- ajax : Asynchronous Javascript and XML
	- 웹페이지에서 비동기적으로 데이터를 주고받는 기술
	- 게시판 댓글 기능은 보통 비동기	

	- 비동기 프로그래밍 장점
		웹페이지 반응성 향상 (필요한 부분만 화면 업데이트 하여 화면 깜빡임↓)
		효율적인 데이터 전송 가능
		사용자와 상호작용할 수 있는 다양한 기능을 가짐
	
5. 웹 어플리케이션 작성(API)
	- 자바스크립트 언어로 활용할 수 있는 많은 API가 제공되기 때문에
	  웹 브라우저에서 실행되는 다양한 웹 어플리케이션을 개발할 수 있다.


-------------------------------------------------------------------------------------------------------------------

[ JS 환경구축 ]
💜node.js 설치
	- 크롬 V8 Javascript 엔진으로 빌드된 javascript 런타임
	- javascript로 작성된 프로그램을 일반 어플리케이션처럼 실행시켜주는 런타임

	- 2009년 라이언달이 발표함
	- 브라우저에서만 동작하던 자바스크립트를 브라우저 이외의 환경에서도 동작시킬 수 있는 JS 실행환경
	  (vs code 내에서도 자바스크립트를 확인할 수 있음)
	- npm(node package manager) : JS 패키지 매니저
	  (node.js에서 사용할 수 있는 모듈들을 패키지화 해서 모아둔 저장소 역할과 패키지 설치 및 관리를 위한 CLI 제공)

	- node.js 검색 > LTS 버전으로 설치(안정화된 버전)

💜Node.js 사용하는 이유
	- JS는 스크립트 언어
	- 특정 프로그램 안에서만 동작하기 때문에 웹브라우저가 없다면 JS를 사용할 수 없다.
	- Node.js는 JS를 웹 브라우저에서 독립시켜서 Node.js 터미널 프로그램에서 웹 브라우저 없이 JS를 실행할 수 있다.
	- Node.js를 통해 JS라는 한 가지 언어로 서버 구축이 가능하다.

💜확장 프로그램 설치
	- code runner
	- 설치 후 한글 깨짐 확인
		1) vs code 재시작
		2) code runner 설정 - 확장설정 - settings.json 파일마다 "javascript" : "node" 있는지 확인 -> 재시작
		3) 재부팅


-------------------------------------------------------------------------------------------------------------------

[ 자바스크립트 기본 문법 ]
💜JS를 작성할 수 있는 위치
1. HTML 태그의 이벤트 리스너 속성에 작성
	- HTML 태그 내에 이벤트가 발생할 때 처리하는 코드를 등록하는 리스너 속성이 있다.
	  이 속성에 자바스크립트 코드를 작성할 수 있다.

2. <script> 태그 내에 작성
	- <html> 태그 내 어디서든 작성할 수 있다.
	- 여러 번 태그를 써도 된다.
	- 외부 스크립트 파일 가져올 때
		<script src="파일경로"></script>

3. JS 파일에 작성한 것
	- .js 파일에 별도로 JS 코드를 작성한 것

4. url 부분에 작성
	- <a> 태그의 href 속성 등에서 자바스크립트 코드를 작성할 수 있다.
	- href 속성에서 자바스크립트 코드를 쓸 때는 javascript라는 키워드를 작성해야 한다.


💜실행문
	- 하나의 문장은 세미콜론으로 구분한다.
	- 대소문자를 구분한다.


💜자바스크립트 식별자(이름)
	- 식별자 identifier : 어떤 값을 구별해서 식별할 수 있는 고유한 이름
			 개발자가 변수, 상수, 함수 등에 붙이는 이름이다.

	- 식별자 작명 규칙
		1) 시작 문자 : 알파벳, 언더바(_), 달러($)만 가능
		2) 두 번째 이상 문자 : 알파벳, 언더바(_), 달러($), 숫자(0-9) 가능
		3) 대소문자 구분
		4) 키워드 사용 불가


💜문장 구분
	- 세미콜론으로 문장을 구분한다.
	- 한 줄에 한 문장만 있는 경우 세미콜론 생략해도 되지만 붙이자.


💜주석
	- java 주석
		한줄주석 	 //
		블록주석  /* */
		API 주석  /** */

	- SQL 주석	--
	- HTML 주석	<!--  -->
	- CSS 주석	/*  */
	- JS 주석
		한줄주석	//
		블록주석 /* */


💜자료형
	1. 원시타입
		- 숫자(number) : 정수, 실수 구분 없다.
		

	2. 객체타입










