day60 (웹개발4 7일차 / 자바스크립트 7일차)
DOM과 이벤트 -> 문서로딩 이벤트

-------------------------------------------------------------------------------------------------------------------------------

[ DOM과 이벤트 ]
	- 기존의 이벤트 처리방식은 HTML 코드에 자바스크립트를 사용하였다.
	- 가독성과 유지보수에 좋지 않다.
	- DOM을 사용하여 JS에 HTLML 요소를 불러와서 이벤트를 처리할 수 있다.


💚DOM 사용하기
	- document.메서드( )
	- DOM에서는 HTML 요소를 선택자를 이용해 접근하는 여러 메서드를 제공한다.

	1. getElementById("id명")
		- 태그의 id속성으로 해당 요소를 가져온다.
		- id는 중복을 허용하지 않으므로 메소드의 결과 객체는 1개이다.

	2. getElementsByClassName("class명")
		- 태그의 class 속성으로 해당 요소를 가져온다.
		- class는 여러 요소가 같은 값을 가질 수 있으므로
		  메소드의 결과는 여러 객체를 담은 배열이다.

	3. querySelector('선택자')
		- id, class 외에도 여러 방법으로 요소를 가져올 수 있다
		- css의 선택자를 활용하면 되므로 id는 #으로, class는 .으로 사용하여 선택자를 작성한다.
		- 1개의 요소를 가져올 때 사용하며 메소드의 결과는 객체 1개를 반환한다.
		  선택자로 여러 개가 선택된다면, 가장 첫 번째 요소를 선택한다.

	4. querySelectorAll('선택자')
		- querySelector와 같으나 여러 개의 요소를 가져올 때 사용한다.
		- 메소드의 결과는 객체를 담은 배열을 반환한다.


💚요소 내용 가져오기, 수정하기
	- 요소.innerHTML
		요소의 text와 내부 태그까지 가져온다
	- 요소.innerText
		요소의 text를 가져온다.


💚요소 속성 가져오기, 수정하기, 삭제하기
	- 요소.getArrribute("속성명")
		해당 요소의 특정 속성을 가져온다 (태그의 속성을 가져올 때 사용)
	- 요소.setAttribute("속성명", "값")
		해당 요소의 특정 속성과 값을 설정한다.
	- 요소.removeAttribute("속성명")
		요소에서 특정 속성을 제거한다.


💚HTML 요소 프로퍼티 직접 수정하기
	- style 프로퍼티를 이용하여 직접 수정한다.
		요소.style.속성명 = '값' ;

	- 속성명은 css 속성명과 같으나 카멜 표기법을 사용한다.

		
-------------------------------------------------------------------------------------------------------------------------------

[ DOM을 활용한 이벤트 처리 ]
💚DOM 요소에 이벤트 핸들러를 직접 연결시키기
	- event handler : 이벤트를 처리하는 함수
	  요소.on이벤트명 = 함수( );


💚addEventListener( ) 메서드 사용하기
	- 하나의 요소에 여러 이벤트를 연결할 수 있으며 가독성도 더 좋다.
	 요소.addEventListener(이벤트, 함수)


-------------------------------------------------------------------------------------------------------------------------------

[ 문서 로딩 이벤트 ]
💚window 객체
	- document 객체의 부모 객체이다.
	- window 객체는 브라우저 창을 의미하고, 브라우저를 다루는 여러 기능을 가지고 있다.


💚load 이벤트
	- window 객체에 load 이벤트를 걸어주면
	  문서의 로딩이 완전히 끝났을 때 이벤트가 발생한다.
	- 다른 객체와 동일하게 이벤트 핸들러를 연결하면 된다.
		1) window.onload = () => { }
		2) window.addEventListener('load', ( ) => { })


💚scroll 이벤트
	- 스크롤을 이용해 화면에 위치를 변경하면 발생한다.
	- 브라우저에 관한 이벤트이므로 window 객체에 이벤트 핸들러를 연결한다.





